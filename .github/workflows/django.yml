name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements-vps.txt
    - name: Run Tests
      env:
        DATABASE_URL: "postgresql://postgres:postgres@127.0.0.1:5432/github_actions"
        REDIS_URL: "redis://127.0.0.1:6379"
        DEBUG: ${{ secrets.DEBUG }}
        ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
        CORS_ORIGIN_WHITELIST: ${{ secrets.CORS_ORIGIN_WHITELIST }}
        USE_HEROKU: ${{ secrets.USE_HEROKU }}
        USE_GOOGLE_STORAGE: ${{ secrets.USE_GOOGLE_STORAGE }}
        GS_BUCKET_NAME: ${{ secrets.GS_BUCKET_NAME }}
        GS_CREDENTIALS: ${{ secrets.GS_CREDENTIALS }}
        LOAD_GS_CREDENTIALS_FROM_FILE: ${{ secrets.LOAD_GS_CREDENTIALS_FROM_FILE }}
        AFRICASTALKING_USERNAME: ${{ secrets.AFRICASTALKING_USERNAME }}
        AFRICASTALKING_APIKEY: ${{ secrets.AFRICASTALKING_APIKEY }}
        AFRICASTALKING_ENVIRONMENT: ${{ secrets.AFRICASTALKING_ENVIRONMENT }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        SENDGRID_DEFAULT_SENDER: ${{ secrets.SENDGRID_DEFAULT_SENDER }}

      run: |
        python manage.py test --keepdb

    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      if: github.ref == 'refs/heads/master' && job.status == 'success'
      run: |
        git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git
        git push heroku HEAD:master -f
